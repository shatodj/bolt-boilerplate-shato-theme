{# Theme section block #}
{# Required: section, bgColor #}
{# Optional: isParalax, images,  #}
{% block section %}

	{% set sectionExtraClass = confog.get("theme/layout/class/section")|default("") %}

	{# Actual section with content #}
	{% set content %}
		<div class="shpr-section-anchor" id="{{ section.slug }}"></div>
		<div class="container">
			{% with { 'section': section } %}
			{{ block('section_content') }}
			{%- endwith -%}	
		</div>
	{% endset %}

	{# Section images initialization #}
	{% if section.image|default is not empty %}
		{% import "twig/partials/_macros.twig" as m %}
		{% set bgImages = m.thumbimage(section.image, 'section-small') ~ ';' ~ section.image.path %}
	{% endif %}

	{# Wrap section in lazy-background element #}
	{%- with { 
		bgImages: bgImages|default, 
		isParalax: isParalax, 
		content: content, 
		htmlTag: "section", 
		class: "section is-medium is-section-" ~ bgColor ~ " " ~ sectionExtraClass
	} -%}
		{{ block("lazy_background") }}
	{%- endwith -%}

{% endblock %}

{# Content block #}
{# Showing content of 'block' content type #}
{% block section_content %}
	<h2 class="title is-3 is-size-4-mobile is-spaced {{ title_class|default('') }}">{{ section.title|default }}</h2>

	{%- if section.content is not empty %}
		<div class="content">
			{{ section.content }}
		</div>
	{% endif -%}

	{# Embedded field #}
	{%- if section.embedded is not empty %}
		{{ section.embedded.html|raw }}
	{% endif %}
	{# Textarea field consideret as embedded with raw not sanitized data #}
	{%- if section.embedded_raw is not empty %}
		{{ section.embedded_raw|raw }}
	{% endif %}

	{# Showing the listing of contents  #}
	{# If 'contenttemplate' is not present then will be generated by the type of data' #}
	{% with { 'section': section }%}
	{{ block("section_content_list_blocks") }}
	{% endwith %}

	{# showing the gallery if added to the block #}
	{% if section.gallery|length %}
		<section class="content">
			<div class="shpr-gallery imagelist">
				{% import "twig/partials/_macros.twig" as m %}
				{{ m.lazyGallery(section.gallery, "160", "120") }}
			</div>
		</section>
	{% endif %}

	{# Showing links / actions for the Block #}
	{% if section.links|length > 0 or section.editlink() %}
		<nav class="shpr-actions columns">
			<div class="column has-text-centered">
				{% for link in section.links %}	
					<a href="{{ link.contentlink }}" class="button">{{ link.title|markdown }}</a>
				{% endfor %}
				{% if section.editlink() %}
					{% with { 'record': section } %}
					{{ block('edit_button') }}
					{% endwith %}
				{% endif %}
			</div>
		</nav>
	{% endif %}
{% endblock %}

{# Section content lisy blocks #}
{% block section_content_list_blocks %}
	{% set subBlockContent = [] %}

	{%- if section.contentlink|default is not empty and not (section.contentlink starts with 'http') %}
		{% setcontent subBlockContent = section.contentlink %}
	{% endif %}

	{% if section.contentselect|default is not empty %}
		{% set subBlockContent = subBlockContent|merge(section.contentselect|selected) %}
	{% endif %}

	{% if subBlockContent is not empty %}
	
		{# Generate template name in case is contenttemplate is not defined #}
		{% if section.contenttemplate|default is not empty %}
			{% set template = section.contenttemplate %}
		{% else %}
			{% set templateName = subBlockContent is iterable ? 'listing' : 'content' %}
			{% set template = 'twig/contentblock/' ~ templateName ~ '.twig' %}
		{% endif %}

		<section>
			{% include template with { content: subBlockContent } %}
		</section>
	{% endif -%}
{% endblock %}

{# Render Hero Block #}
{# Required: section, #}
{% block hero %}

	{% set themeLayout = config.get('theme/layout') %}
	{% set themeHeaderClass = themeLayout.class.header_index|default('is-large') %}
	{% set themeHeaderBgOverlayClass = themeLayout.class.header_bg_overlay|default('') %}
	
	{% set content %}
		<div class="hero-body">
			{% block hero_body %}
				<div class="container has-text-centered">
					{% with { 'section': section }%}
					{{ block('section_content') }}
					{%- endwith -%}	
				</div>
			{% endblock %}
		</div>
	{% endset %}

	<section class="shpr-section shpr-lazy-background {{ headerBlockClass }} {{ themeHeaderClass }}" 
		{% if homepage.image is not empty %} data-background-image="{{ bgImages }}" {% endif %}>
		
		<div class="shpr-background shpr-background-overlay {{ themeHeaderBgOverlayClass }}"></div>
		
		{{ content }}
	</section>
{% endblock %}


{# Lazy Background helper block #}
{# Required: 
	content: HTML 
#}
{# Optional: 
	bgImages: array 
	isParalax: boolean
	htmlTag: enum(section|article|div...) 
	class: string
#}
{% block lazy_background %}

	<div class="shpr-lazy-background" data-background-image="{{ bgImages|default() }}">
				
		{# Adding empty elements to handle dynamic background styling - see lazy-section-backgorund.js #}
		{% if isParalax|default() == true and bgImages|default() is not empty %}
			<div class="shpr-background shpr-background-paralax"></div>
		{% endif %}	
		<div class="shpr-background shpr-background-overlay"></div>

		{# Actual section with content #}
		<{{htmlTag|default("div")}} class="shpr-section {{class|default("")}}">
			{{ content }}
		</{{htmlTag}}>
	</div>

{% endblock %}


{% block edit_button %}
	<a href="{{ record.editlink() }}" class="button is-info is-outlined">
		{{ __('general.phrase.edit') }}
	</a>
{% endblock %}


{% block error_block %}
	<div class="notification is-warning">
		{{ message|default }}
	</div>
{% endblock %}
